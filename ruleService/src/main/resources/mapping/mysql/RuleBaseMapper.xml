<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsg.dao.mysql.RuleBaseMapper">
  <resultMap id="BaseResultMap" type="com.jsg.entity.RuleBase">
    <id column="id" jdbcType="INTEGER" property="id" />
    <id column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="depend_ruleId" jdbcType="INTEGER" property="dependRuleid" />
    <result column="policy_type" jdbcType="INTEGER" property="policyType" />
    <result column="deploy_status" jdbcType="INTEGER" property="deployStatus" />
    <result column="feedback_comment" jdbcType="VARCHAR" property="feedbackComment" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_userId" jdbcType="INTEGER" property="createUserid" />
    <result column="update_userId" jdbcType="INTEGER" property="updateUserid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, `name`, priority, depend_ruleId, policy_type, deploy_status, feedback_comment, 
    create_time, update_time, create_userId, update_userId
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.jsg.entity.RuleBaseKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rule_base
    where id = #{id,jdbcType=INTEGER}
      and code = #{code,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.jsg.entity.RuleBaseKey">
    delete from rule_base
    where id = #{id,jdbcType=INTEGER}
      and code = #{code,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jsg.entity.RuleBase">
    insert into rule_base (id, code, `name`, 
      priority, depend_ruleId, policy_type, 
      deploy_status, feedback_comment, create_time, 
      update_time, create_userId, update_userId
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{priority,jdbcType=INTEGER}, #{dependRuleid,jdbcType=INTEGER}, #{policyType,jdbcType=INTEGER}, 
      #{deployStatus,jdbcType=INTEGER}, #{feedbackComment,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUserid,jdbcType=INTEGER}, #{updateUserid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jsg.entity.RuleBase">
    insert into rule_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="dependRuleid != null">
        depend_ruleId,
      </if>
      <if test="policyType != null">
        policy_type,
      </if>
      <if test="deployStatus != null">
        deploy_status,
      </if>
      <if test="feedbackComment != null">
        feedback_comment,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserid != null">
        create_userId,
      </if>
      <if test="updateUserid != null">
        update_userId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="dependRuleid != null">
        #{dependRuleid,jdbcType=INTEGER},
      </if>
      <if test="policyType != null">
        #{policyType,jdbcType=INTEGER},
      </if>
      <if test="deployStatus != null">
        #{deployStatus,jdbcType=INTEGER},
      </if>
      <if test="feedbackComment != null">
        #{feedbackComment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="updateUserid != null">
        #{updateUserid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jsg.entity.RuleBase">
    update rule_base
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="dependRuleid != null">
        depend_ruleId = #{dependRuleid,jdbcType=INTEGER},
      </if>
      <if test="policyType != null">
        policy_type = #{policyType,jdbcType=INTEGER},
      </if>
      <if test="deployStatus != null">
        deploy_status = #{deployStatus,jdbcType=INTEGER},
      </if>
      <if test="feedbackComment != null">
        feedback_comment = #{feedbackComment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null">
        create_userId = #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="updateUserid != null">
        update_userId = #{updateUserid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and code = #{code,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jsg.entity.RuleBase">
    update rule_base
    set `name` = #{name,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      depend_ruleId = #{dependRuleid,jdbcType=INTEGER},
      policy_type = #{policyType,jdbcType=INTEGER},
      deploy_status = #{deployStatus,jdbcType=INTEGER},
      feedback_comment = #{feedbackComment,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_userId = #{createUserid,jdbcType=INTEGER},
      update_userId = #{updateUserid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
      and code = #{code,jdbcType=VARCHAR}
  </update>
</mapper>