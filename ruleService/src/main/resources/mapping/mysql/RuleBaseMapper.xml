<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsg.dao.mysql.RuleBaseMapper">
    <resultMap id="BaseResultMap" type="com.jsg.entity.RuleBase">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <id column="catalog_id" property="catalogId"/>
        <id column="code" jdbcType="VARCHAR" property="code"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="priority" jdbcType="INTEGER" property="priority"/>
        <result column="depend_ruleId" jdbcType="INTEGER" property="dependRuleid"/>
        <result column="policy_type" jdbcType="INTEGER" property="policyType"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="related_rule_ids" jdbcType="VARCHAR" property="relatedRuleIds"/>
        <result column="deploy_status" jdbcType="INTEGER" property="deployStatus"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="feedback_comment" jdbcType="VARCHAR" property="feedbackComment"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_userId" jdbcType="INTEGER" property="createUserid"/>
        <result column="update_userId" jdbcType="INTEGER" property="updateUserid"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, catalog_id ,code, `name`, priority, depend_ruleId, policy_type, version, related_rule_ids,
    deploy_status, is_delete, feedback_comment, create_time, update_time, create_userId,
    update_userId
  </sql>

    <delete id="del" parameterType="int">
    delete from rule_base
    where id = #{ruleId}
  </delete>
    <insert id="add" parameterType="com.jsg.entity.RuleBase">
    insert into rule_base (id,catalog_id , code, `name`,
      priority, depend_ruleId, policy_type,
      version, related_rule_ids, deploy_status,
      is_delete, feedback_comment, create_time,
      update_time, create_userId, update_userId
      )
    values (#{id,jdbcType=INTEGER},#{catalogId}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{priority,jdbcType=INTEGER}, #{dependRuleid,jdbcType=INTEGER}, #{policyType,jdbcType=INTEGER},
      #{version,jdbcType=INTEGER}, #{relatedRuleIds,jdbcType=VARCHAR}, #{deployStatus,jdbcType=INTEGER},
      #{isDelete,jdbcType=INTEGER}, #{feedbackComment,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{createUserid,jdbcType=INTEGER}, #{updateUserid,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.jsg.entity.RuleBase">
        insert into rule_base
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="catalogId != null">
                catalog_id,

            </if>
            <if test="code != null">
                code,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="priority != null">
                priority,
            </if>
            <if test="dependRuleid != null">
                depend_ruleId,
            </if>
            <if test="policyType != null">
                policy_type,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="relatedRuleIds != null">
                related_rule_ids,
            </if>
            <if test="deployStatus != null">
                deploy_status,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="feedbackComment != null">
                feedback_comment,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createUserid != null">
                create_userId,
            </if>
            <if test="updateUserid != null">
                update_userId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="catalogId != null">
                #{catalogId},

            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="priority != null">
                #{priority,jdbcType=INTEGER},
            </if>
            <if test="dependRuleid != null">
                #{dependRuleid,jdbcType=INTEGER},
            </if>
            <if test="policyType != null">
                #{policyType,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="relatedRuleIds != null">
                #{relatedRuleIds,jdbcType=VARCHAR},
            </if>
            <if test="deployStatus != null">
                #{deployStatus,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="feedbackComment != null">
                #{feedbackComment,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserid != null">
                #{createUserid,jdbcType=INTEGER},
            </if>
            <if test="updateUserid != null">
                #{updateUserid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="edi" parameterType="com.jsg.entity.RuleBase">
        update rule_base
        <set>
            <if test="catalogId != null">
                #{catalogId},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="priority != null">
                priority = #{priority,jdbcType=INTEGER},
            </if>
            <if test="dependRuleid != null">
                depend_ruleId = #{dependRuleid,jdbcType=INTEGER},
            </if>
            <if test="policyType != null">
                policy_type = #{policyType,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="relatedRuleIds != null">
                related_rule_ids = #{relatedRuleIds,jdbcType=VARCHAR},
            </if>
            <if test="deployStatus != null">
                deploy_status = #{deployStatus,jdbcType=INTEGER},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="feedbackComment != null">
                feedback_comment = #{feedbackComment,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserid != null">
                create_userId = #{createUserid,jdbcType=INTEGER},
            </if>
            <if test="updateUserid != null">
                update_userId = #{updateUserid,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>



    <select id="selechistoryVersion" parameterType="string" resultType="string">
        SELECT group_concat(t1.id SEPARATOR '-' ) as ids
FROM
    rule_base t1  WHERE t1.related_rule_ids Like (#{ids}'%')
GROUP BY t1.`id`
    </select>


    <update id="isDel" parameterType="int">
        update rule_base
        <set>
            is_delete = 1
        </set>
        where id = #{id}

    </update>

    <select id="listRule" resultMap="BaseResultMap">
        SELECT
        *
        FROM
        rule_base t1
        WHERE
        t1.is_delete = 0
        and t1.catalog_id #{catalogId}
        <if test="queryKey != null">
            AND concat(name,code) like ('%' #{queryKey} '%')

        </if>
        <if test="deployStatus != null">
            and t1.deploy_status = #{deployStatus}
        </if>
        ORDER BY
        t1.priority

    </select>


    <select id="ruleHistory" parameterType="string" resultMap="BaseResultMap">
select *
from rule_base t1
where t1.related_rule_ids  like CONCAT(#{ids},'%')
order by t1.id;
    </select>

    <update id="ruleReduction" parameterType="string">
    update rule_base t1 inner join (select if(t1.is_delete = 1, 0, 1) as isDel, t1.id
                                from rule_base t1
                                where t1.id = #{id}) c on t1.id = c.id
set t1.is_delete = c.isDel
where t1.id = #{id};

    </update>

</mapper>